Workaround symbol conflict with capstone/tricore.h
--- qemu-8.0.5/target/tricore/cpu.h.orig	2023-09-21 22:19:34.000000000 +0200
+++ qemu-8.0.5/target/tricore/cpu.h	2024-04-27 21:25:15.112539225 +0200
@@ -258,7 +258,7 @@ enum tricore_features {
     TRICORE_FEATURE_161,
 };
 
-static inline int tricore_feature(CPUTriCoreState *env, int feature)
+static inline int qemu_tricore_feature(CPUTriCoreState *env, int feature)
 {
     return (env->features & (1ULL << feature)) != 0;
 }
--- qemu-8.0.5/target/tricore/op_helper.c.orig	2023-09-21 22:19:34.000000000 +0200
+++ qemu-8.0.5/target/tricore/op_helper.c	2024-04-27 21:25:37.975748698 +0200
@@ -2528,7 +2528,7 @@ void helper_ret(CPUTriCoreState *env)
     /* PCXI = new_PCXI; */
     env->PCXI = new_PCXI;
 
-    if (tricore_feature(env, TRICORE_FEATURE_13)) {
+    if (qemu_tricore_feature(env, TRICORE_FEATURE_13)) {
         /* PSW = new_PSW */
         psw_write(env, new_PSW);
     } else {
@@ -2639,7 +2639,7 @@ void helper_rfm(CPUTriCoreState *env)
     env->gpr_a[10] = cpu_ldl_data(env, env->DCX+8);
     env->gpr_a[11] = cpu_ldl_data(env, env->DCX+12);
 
-    if (tricore_feature(env, TRICORE_FEATURE_131)) {
+    if (qemu_tricore_feature(env, TRICORE_FEATURE_131)) {
         env->DBGTCR = 0;
     }
 }
--- qemu-8.0.5/target/tricore/cpu.c.orig	2023-09-21 22:19:34.000000000 +0200
+++ qemu-8.0.5/target/tricore/cpu.c	2024-04-27 21:25:52.302337751 +0200
@@ -103,14 +103,14 @@ static void tricore_cpu_realizefn(Device
     }
 
     /* Some features automatically imply others */
-    if (tricore_feature(env, TRICORE_FEATURE_161)) {
+    if (qemu_tricore_feature(env, TRICORE_FEATURE_161)) {
         set_feature(env, TRICORE_FEATURE_16);
     }
 
-    if (tricore_feature(env, TRICORE_FEATURE_16)) {
+    if (qemu_tricore_feature(env, TRICORE_FEATURE_16)) {
         set_feature(env, TRICORE_FEATURE_131);
     }
-    if (tricore_feature(env, TRICORE_FEATURE_131)) {
+    if (qemu_tricore_feature(env, TRICORE_FEATURE_131)) {
         set_feature(env, TRICORE_FEATURE_13);
     }
     cpu_reset(cs);
